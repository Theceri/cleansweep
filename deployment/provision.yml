---
- hosts: all
  vars_files:
    - vars.yml
  gather_facts: false
  sudo: true

  tasks:
  - name: Create user.
    user: home={{ project_root }} name={{ project_name }} state=present

  - name: Create directories.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}/{{item}}/
    with_items:
    - logs

  - name: Install required system packages.
    apt: pkg={{ item }} state=installed update-cache=yes
    with_items: "{{ system_packages }}"

  - name: Install required Python packages.
    easy_install: name={{ item }}
    with_items: "{{ python_packages }}"

  - name: link code folder
    file: state=link src=/vagrant dest={{ project_root }}/code
    when: vm == 1

  - name: Create the SSH directory.
    file: state=directory path={{ project_root }}/.ssh/
    when: vm == 0

  - name: Upload SSH public key
    authorized_key:
      user={{ project_name }}
      key="{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

  - name: Install nginx configuration file.
    copy: src=files/etc/nginx/sites-available/{{project_name}}.conf dest=/etc/nginx/sites-available/{{ project_name }}.conf
    notify: restart nginx

  - name: Enable nginx configuration file.
    file: src=../sites-available/{{project_name}}.conf dest=/etc/nginx/sites-enabled/{{project_name}}.conf state=link
    notify: restart nginx

  - name: Install supervisord scripts.
    copy: src=files/etc/supervisor/conf.d/{{ project_name }}.conf dest=/etc/supervisor/conf.d/{{ project_name }}.conf
    notify: restart supervisor services

  - name: Create {{ project_name }} postgres user
    postgresql_user: name={{ project_name }} role_attr_flags=CREATEDB,NOSUPERUSER
    sudo_user: postgres

  - name: Create {{ project_name }} database
    postgresql_db: name={{ project_name}} owner={{ project_name }}
    sudo_user: postgres

  handlers:
    - include: handlers.yml

- include: deploy.yml
